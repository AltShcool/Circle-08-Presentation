import{b as s,o as d,w as r,g as l,ad as t,v as a,x as i,X as n}from"./modules/vue-DnfkPNEi.js";import{I as c}from"./slidev/default-C9hOnQva.js";import{u as p,f as m}from"./slidev/context-C7ZxMo3s.js";import{_ as f}from"./index-OtCFIimV.js";import"./monaco/bundled-types-DammcoRR.js";import"./modules/file-saver-BzOOqXCn.js";import"./modules/shiki-Cj2c-_Dm.js";const h={__name:"slides.md__slidev_6",setup(_){const{$clicksContext:o,$frontmatter:u}=p();return o.setup(),(b,e)=>(d(),s(c,a(i(n(m)(n(u),5))),{default:r(()=>e[0]||(e[0]=[l("h1",null,"2. Handy Array Methods",-1),l("p",null,[t("These methods are the everyday tools for working with lists. "),l("br"),t(" Mutatable methods change the original array, and non mutable ones don’t.")],-1),l("table",null,[l("thead",null,[l("tr",null,[l("th",null,"Method"),l("th",null,"What it does"),l("th",null,"Mutates?")])]),l("tbody",null,[l("tr",null,[l("td",null,[l("code",null,"sort(cb)")]),l("td",null,"Arrange items, accepts compare fn"),l("td",null,"Yes")]),l("tr",null,[l("td",null,[l("code",null,"reverse()")]),l("td",null,"Flip order in place"),l("td",null,"Yes")]),l("tr",null,[l("td",null,[l("code",null,"slice(‑‑)")]),l("td",null,"Copy a portion"),l("td",null,"No")]),l("tr",null,[l("td",null,[l("code",null,"push(x)")]),l("td",null,"Add to end"),l("td",null,"Yes")]),l("tr",null,[l("td",null,[l("code",null,"shift()")]),l("td",null,"Remove first"),l("td",null,"Yes")]),l("tr",null,[l("td",null,[l("code",null,"unshift(x)")]),l("td",null,"Add to front"),l("td",null,"Yes")])])],-1),l("blockquote",null,[l("p",null,[l("strong",null,"Note:"),t(" use non‑mutating methods ("),l("code",null,"slice"),t(", "),l("code",null,"map"),t(", "),l("code",null,"filter"),t(") in React state to avoid bugs.")])],-1)])),_:1},16))}},A=f(h,[["__scopeId","data-v-7d27baa7"]]);export{A as default};
